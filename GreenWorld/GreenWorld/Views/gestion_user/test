private func verifyCode() {
    let fullCode = code1 + code2 + code3 + code4
    userViewModel.verifyResetCode(email: email, resetCode: fullCode) { isSuccess in
        DispatchQueue.main.async {
            if isSuccess {
                self.navigateToResetPassword = true
            } else {
                self.showToast = true
                DispatchQueue.main.asyncAfter(deadline: .now() + 3) {
                    self.showToast = false
                }
            }
        }
    }
}





func verifyResetCode(email: String, resetCode: String, completion: @escaping (Bool) -> Void) {
        let url = URL(string: "\(baseURL)/admin/verifyResetCode")! // Replace with your server URL
        var request = URLRequest(url: url)
        request.httpMethod = "POST"
        request.setValue("application/json", forHTTPHeaderField: "Content-Type")

        let body: [String: String] = [
            "email": email,
            "resetCode": resetCode
        ]

        request.httpBody = try? JSONSerialization.data(withJSONObject: body)

        URLSession.shared.dataTask(with: request) { data, response, error in
            DispatchQueue.main.async {
                if let error = error {
                    print("Network error: \(error)")
                    completion(false)
                    return
                }

                guard let httpResponse = response as? HTTPURLResponse else {
                    print("Invalid response")
                    completion(false)
                    return
                }

                if httpResponse.statusCode == 200 {
                    completion(true)
                } else {
                    completion(false)
                }
            }
        }.resume()
    }
