import SwiftUI

struct UserValidationCodeView: View {
    @State private var navigationLinkActive: Bool = false
    @State private var code1: String = ""
    @State private var code2: String = ""
    @State private var code3: String = ""
    @State private var code4: String = ""

    var body: some View {
        NavigationView {
            VStack {
                // Existing code ...

                HStack(spacing: 15) {
                    ForEach(0..<4, id: \.self) { index in
                        CodeInputField(text: binding(for: index))
                    }
                }
                .padding(.top, 15)

                // Existing code ...
            }
            .navigationBarHidden(true)
        }
    }

    private func binding(for index: Int) -> Binding<String> {
        switch index {
        case 0: return $code1
        case 1: return $code2
        case 2: return $code3
        case 3: return $code4
        default: fatalError("Index out of range")
        }
    }
}

struct CodeInputField: View {
    @Binding var text: String

    var body: some View {
        TextField("", text: $text)
            .onChange(of: text) { newValue in
                // Restrict input to numbers only and limit length to 1
                if newValue.count > 1 || !newValue.allSatisfy({ $0.isNumber }) {
                    text = String(newValue.prefix(1))
                }
            }
            .textFieldStyle(RoundedBorderTextFieldStyle())
            .frame(width: 50, height: 50)
            .font(.system(size: 24, weight: .bold))
            .multilineTextAlignment(.center)
            .keyboardType(.numberPad)
    }
}

struct UserValidationCodeView_Previews: PreviewProvider {
    static var previews: some View {
        UserValidationCodeView()
    }
}
