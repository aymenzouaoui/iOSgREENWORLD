func sendResetCode(email: String, completion: @escaping (Result<String, Error>) -> Void) {
    let url = URL(string: "\(baseURL)/sendResetCode")!
    var request = URLRequest(url: url)
    request.httpMethod = "POST"
    request.addValue("application/json", forHTTPHeaderField: "Content-Type")

    let body: [String: String] = ["email": email]
    request.httpBody = try? JSONSerialization.data(withJSONObject: body, options: [])

    URLSession.shared.dataTask(with: request) { data, response, error in
        if let error = error {
            completion(.failure(error))
            return
        }

        guard let httpResponse = response as? HTTPURLResponse else {
            completion(.failure(NetworkError.invalidResponse))
            return
        }

        switch httpResponse.statusCode {
        case 200:
            completion(.success("Reset code sent successfully."))
        case 404:
            completion(.failure(NetworkError.userNotFound))
        default:
            completion(.failure(NetworkError.requestFailed(httpResponse.statusCode)))
        }
    }.resume()
}
