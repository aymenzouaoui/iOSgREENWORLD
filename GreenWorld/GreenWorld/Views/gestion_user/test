import SwiftUI

struct ResetPasswordView: View {
    @StateObject private var userViewModel = UserViewModel() // Assuming this has the updatePassword function
    @State private var newPassword: String = ""
    @State private var confirmPassword: String = ""

    var body: some View {
        VStack {
            Image("resetpass") // Replace with your image's name
                .resizable()
                .scaledToFit()
                .frame(width: 200, height: 100) // Adjust the size as needed
                .padding(.top)

            Text("Reset Password")
                .font(.title)
                .padding()

            SecureField("New Password", text: $newPassword)
                .padding()
                .background(Color.gray.opacity(0.2))
                .cornerRadius(5)
                .overlay(RoundedRectangle(cornerRadius: 5).stroke(Color.green))

            SecureField("Confirm Password", text: $confirmPassword)
                .padding()
                .background(Color.gray.opacity(0.2))
                .cornerRadius(5)
                .overlay(RoundedRectangle(cornerRadius: 5).stroke(Color.green))

            Button("RÃ©initialiser") {
                if newPassword == confirmPassword {
                    let email = UserDefaults.standard.string(forKey: "email") ?? ""
                    userViewModel.updatePassword(email: email, newPassword: newPassword) { result in
                        DispatchQueue.main.async {
                            // Handle the result here without alert
                            // For example, update a text view or navigate to another view
                        }
                    }
                } else {
                    // Handle the case where passwords do not match
                    // For example, update a text view to show the error
                }
            }
            .padding()
            .background(Color.green)
            .foregroundColor(Color.white)
            .cornerRadius(10)
        }
        .padding()
    }
}

struct ResetPasswordView_Previews: PreviewProvider {
    static var previews: some View {
        ResetPasswordView()
    }
}
